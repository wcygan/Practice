plugins {
    id 'java'
    id 'jacoco'

    // Builds fat jar with `./gradlew shadowJar`
    id("com.github.johnrengelman.shadow") version "7.0.0"

    id "me.champeau.jmh" version "0.6.6"
}

group 'io.wcygan'
version '1.0-SNAPSHOT'


repositories {
    mavenCentral()
}

dependencies {
    // https://github.com/linkedin/parseq
    implementation group: 'com.linkedin.parseq', name: 'parseq', version: '3.0.0'

    // https://github.com/google/guava
    implementation("com.google.guava:guava:30.1.1-jre")

    implementation('org.apache.commons:commons-lang3:3.12.0')

    // Junit
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.7.2')
    testImplementation('org.junit.jupiter:junit-jupiter-params:5.7.2')
    testRuntimeOnly("org.junit.platform:junit-platform-launcher:1.7.2")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.7.2")
    testRuntimeOnly("org.junit.vintage:junit-vintage-engine:5.7.2")

    // QuickCheck
    testImplementation('com.pholser:junit-quickcheck-core:1.0')
    testImplementation('com.pholser:junit-quickcheck-generators:1.0')

    // Needed For QuickCheck
    testImplementation 'org.slf4j:slf4j-simple:1.7.32'

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
}

test {
    useJUnitPlatform()
    maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    reports {
        xml.required = true
        html.outputLocation = layout.buildDirectory.dir('jacoco')
    }
    dependsOn test // tests are required to run before generating the report
}

jmh {
    timeOnIteration = '250ms'
    warmup = '250ms'
    warmupIterations = 50
    iterations = 50
    fork = 2
    benchmarkMode = ["ss"]
    timeUnit = "ms"
    forceGC = true
}